// ==================== MAIN APP ====================
class MiniApp {
    constructor() {
        this.tg = window.Telegram.WebApp;
        this.currentLang = CONFIG.defaultLanguage;
        this.state = new AppState();
        this.videoPlayer = new VideoPlayer(this);
        this.navigation = new Navigation(this);
        
        this.init();
    }

    init() {
        // Initialize Telegram WebApp
        this.tg.expand();
        this.tg.ready();
        
        // Detect user language
        this.detectLanguage();
        
        // Apply translations
        applyTranslations(this.currentLang);
        
        // Initialize earn button
        this.initButtons();
        
        // Update UI
        this.updateUI();
        
        // Log for debugging
        if (CONFIG.debugMode) {
            console.log('User:', this.tg.initDataUnsafe.user);
            console.log('Language:', this.currentLang);
        }
    }

    applyTelegramTheme() {
        const root = document.documentElement;
        const theme = this.tg.themeParams;
        
        if (theme.bg_color) root.style.setProperty('--bg-color', theme.bg_color);
        if (theme.text_color) root.style.setProperty('--text-primary', theme.text_color);
        if (theme.hint_color) root.style.setProperty('--text-secondary', theme.hint_color);
        if (theme.button_color) root.style.setProperty('--primary-color', theme.button_color);
        if (theme.secondary_bg_color) root.style.setProperty('--secondary-color', theme.secondary_bg_color);
        
        document.body.style.backgroundColor = theme.bg_color || '#ffffff';
    }

    detectLanguage() {
        const tgLang = this.tg.initDataUnsafe.user?.language_code;
        
        if (tgLang && translations[tgLang]) {
            this.currentLang = tgLang;
        } else if (tgLang && tgLang.startsWith('ru')) {
            this.currentLang = 'ru';
        } else if (translations[tgLang?.substring(0, 2)]) {
            this.currentLang = tgLang.substring(0, 2);
        }
    }

    initButtons() {
        const earnBtn = document.getElementById('earn-btn');
        const addLimitBtn = document.getElementById('add-limit-btn');
        const cashOutBtn = document.getElementById('cash-out-btn');
        const copyBtn = document.getElementById('copy-link-btn');
        const inviteBtn = document.getElementById('invite-btn');
        const faqList = document.getElementById('faq-list');
        
        earnBtn.addEventListener('click', () => {
            this.videoPlayer.open();
        });
        addLimitBtn.addEventListener('click', () => {
            this.navigation.navigateTo('quests')
        });
        cashOutBtn.addEventListener('click', () => {
            this.videoPlayer.open();
        });
        copyBtn.addEventListener('click', async () => {
        const referralLink = 'https://t.me/your_mini_app?start=ref123'; 
        try {
            await navigator.clipboard.writeText(referralLink);
            showToast('‚úÖ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        } catch (err) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç:', err);
            showToast('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.');
        }
        });
        inviteBtn.addEventListener('click', () => {
            console.log('–ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞. –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —à–∞—Ä–∏–Ω–≥—É.');
            showToast('–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞).');
        });

        document.getElementById('quests-list').addEventListener('click', (e) => {
        if (e.target.classList.contains('check-btn')) {
                const button = e.target;
                const questItem = button.closest('.quest-item');
                const questId = questItem.dataset.questId;

                // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
                const isCompleted = simulateQuestCheck(questId); 

                if (isCompleted) {
                    markQuestCompleted(questItem, button);
                    showToast('üéâ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
                } else {
                    showToast('‚ö†Ô∏è –£—Å–ª–æ–≤–∏—è –∑–∞–¥–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.');
                }
            }
        });

        renderFaqList();

    // 2. –õ–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
    const helpChatBtn = document.querySelector('.help-chat-btn');
    helpChatBtn.addEventListener('click', () => {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç Telegram –∏–ª–∏ –¥—Ä—É–≥—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
        console.log('–ö–Ω–æ–ø–∫–∞ "–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏" –Ω–∞–∂–∞—Ç–∞. –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞.');
        // window.open('https://t.me/your_support_chat', '_blank'); 
    });

    }

    updateUI() {
        document.getElementById('balance-value').textContent = this.state.getBalance();
        document.getElementById('today-count').textContent = this.state.getTodayCount() + " / " + this.state.getMaxCount();
        document.getElementById('total-earned').textContent = this.state.getTotalEarned();
    }

    onVideoComplete() {
        // Update state
        this.state.updateBalance(CONFIG.rewardAmount);
        
        // Show reward popup
        this.showRewardPopup();
        
        // Update UI
        this.updateUI();
        
        // Haptic feedback
        if (CONFIG.hapticFeedback && this.tg.HapticFeedback) {
            this.tg.HapticFeedback.notificationOccurred('success');
        }
    }

    showRewardPopup() {
        const popup = document.getElementById('reward-popup');
        popup.classList.add('active');
        
        setTimeout(() => {
            popup.classList.remove('active');
        }, 2000);
    }

    
}

// ==================== INITIALIZE APP ====================
let app;

// Wait for all scripts and DOM to load
window.addEventListener('load', () => {
    app = new MiniApp();
    window.miniApp = app; // Make globally accessible for debugging
});

// === –£–í–ï–î–û–ú–õ–ï–ù–ò–ï (Toast Notification) ===
function showToast(message) {
    // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    let toast = document.getElementById('toast');
    if (!toast) {
        toast = document.createElement('div');
        toast.id = 'toast';
        document.body.appendChild(toast);
    }
    toast.textContent = message;
    toast.classList.add('show');
    
    // –°–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        toast.classList.remove('show');
    }, 3000);
}

function simulateQuestCheck(questId) {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
    // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø—É—Å—Ç—å –∫–≤–µ—Å—Ç 1 –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∞ –∫–≤–µ—Å—Ç 3 ‚Äî –Ω–µ—Ç.
    if (questId === 'quest1') {
        return true; 
    }
    return false;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ DOM –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏—è
function markQuestCompleted(questItem, button) {
    // 1. –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å completed –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
    questItem.classList.add('completed');
    
    // 2. –ó–∞—á–µ—Ä–∫–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const title = questItem.querySelector('.quest-title');
    if (title) {
        title.classList.add('completed-title');
    }

    // 3. –ó–∞–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å" –Ω–∞ –∏–∫–æ–Ω–∫—É "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
    const completedIcon = document.createElement('span');
    completedIcon.className = 'check-btn completed-icon';
    completedIcon.textContent = '‚úî';
    
    // –ó–∞–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É
    button.parentNode.replaceChild(completedIcon, button);
}



// ==================== FAQ ====================

function createFaqItem(title, description) {
    const item = document.createElement('div');
    item.className = 'faq-item';
    
    // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è (Toggle Button)
    const toggleButton = document.createElement('button');
    toggleButton.className = 'faq-toggle';
    
    toggleButton.innerHTML = `
        <span class="faq-arrow">‚ñ∂</span>
        <span class="faq-title">${title}</span>
    `;

    // –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏)
    const contentWrapper = document.createElement('div');
    contentWrapper.className = 'faq-content-wrapper';
    
    const descriptionParagraph = document.createElement('p');
    descriptionParagraph.className = 'faq-description';
    descriptionParagraph.textContent = description;
    
    contentWrapper.appendChild(descriptionParagraph);

    // –°–±–æ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    item.appendChild(toggleButton);
    item.appendChild(contentWrapper);
    
    return item;
}

function renderFaqList() {
    const faqListContainer = document.getElementById('faq-list');
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç)
    if (faqListContainer) {
        faqListContainer.innerHTML = ''; 
        
        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        faqData.forEach(item => {
            const faqElement = createFaqItem(item.title, item.description);
            faqListContainer.appendChild(faqElement);
        });
    }

    // –ü–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupFaqToggle();
}

function setupFaqToggle() {
    const faqList = document.getElementById('faq-list');
    if (!faqList) return;

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã FAQ –∏ –Ω–∞–≤–µ—à–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    faqList.addEventListener('click', (e) => {
        const toggleButton = e.target.closest('.faq-toggle');

        if (!toggleButton) return;

        const faqItem = toggleButton.closest('.faq-item');
        const contentWrapper = faqItem.querySelector('.faq-content-wrapper');

        const isActive = faqItem.classList.contains('active');

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        document.querySelectorAll('.faq-item.active').forEach(item => {
            if (item !== faqItem) {
                item.classList.remove('active');
                item.querySelector('.faq-content-wrapper').style.maxHeight = 0;
            }
        });

        if (isActive) {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º
            faqItem.classList.remove('active');
            contentWrapper.style.maxHeight = 0;
        } else {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º
            faqItem.classList.add('active');
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º max-height
            contentWrapper.style.maxHeight = contentWrapper.scrollHeight + 'px';
        }
    });
}


const faqData = [
    { 
        title: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", 
        description: "–ù–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∫–æ—Ä–æ—Ç–∫–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏. –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞–º –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å." 
    },
    { 
        title: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É?", 
        description: "–ù–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ. –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –≤–∞—à –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –¥—Ä—É–≥—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã." 
    },
    { 
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", 
        description: "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏' –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã." 
    },
    { 
        title: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É?", 
        description: "–ù–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ. –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –≤–∞—à –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –¥—Ä—É–≥—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã." 
    },
    { 
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", 
        description: "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏' –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã." 
    },
    { 
        title: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É?", 
        description: "–ù–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ. –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –≤–∞—à –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –¥—Ä—É–≥—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã." 
    },
    { 
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", 
        description: "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏' –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã." 
    },
    { 
        title: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É?", 
        description: "–ù–∞–≥—Ä–∞–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ. –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –≤–∞—à –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –¥—Ä—É–≥—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã." 
    },
    { 
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", 
        description: "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏' –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã." 
    },
    { 
        title: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞", 
        description: "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç $10.00." 
    }
];

// –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—è –µ–≥–æ
// export { faqData };




